# 安全配置
gateway:
  log:
    enabled: true
  # 不校验白名单
  ignore:
    whites:
      - /auth/code
      - /auth/logout
      - /auth/login
      - /auth/binding/*
      - /auth/social/callback
      - /auth/register
      - /auth/tenant/list
      - /resource/sms/code
      - /resource/sse/close
      - /*/v3/api-docs
      - /*/error
      - /csrf

spring:
  cloud:
    # 网关配置
    gateway:
      default-filters:
        - AddRequestHeader=origin,gateway
      discovery:
        locator:
          lowerCaseServiceId: true
          enabled: true
      routes:
        - id: uac-platform
          uri: lb://uac-platform
          predicates:
            - Path=/uac/**
          filters:
            - StripPrefix=1
        - id: api-generator-platform
          uri: lb://api-generator-platform
          predicates:
            - Path=/ag/**
          filters:
            - StripPrefix=1
        - id: file-store-platform
          uri: lb://file-store-platform
          predicates:
            - Path=/file/**,/monitor/**
          filters:
            - StripPrefix=1
        - id: notice-platform
          uri: lb://notice-platform
          predicates:
            - Path=/notice/**
          filters:
            - StripPrefix=1

    # sentinel 配置
    sentinel:
      filter:
        enabled: true
      eager: true
      scg: # 针对 Spring Cloud Gateway 限流后的相应配置
        fallback:
          mode: response # 指定降级处理的模式为返回响应
          response-status: 200
          response-body: '{ "code": 10001, "message": "服务忙请稍后再试", "data": null }'
      globalException: false # 取消 work-common-sentinel 开启自定义异常处理器，使用上面 scg 的 fallback 处理器
      # nacos 配置持久化
      datasource:
        flow-rule:
          nacos:
            server-addr: ${spring.cloud.nacos.server-addr}
            username: ${spring.cloud.nacos.username}
            password: ${spring.cloud.nacos.password}
            group-id: ${spring.cloud.nacos.config.group}
            namespace: ${spring.cloud.nacos.config.namespace}
            data-id: sentinel-${spring.application.name}-flow-rule.json
            data-type: json
            rule-type: flow
         